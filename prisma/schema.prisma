generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Hiring {
  id            String   @id @default(cuid())
  createdAt     DateTime @default(now())
  title         String
  description   String?
  position      String
  salary        Int
  mode          Mode     @default(OFFICE)
  numberOfViews Int      @default(0) @map("number_of_views")
  updatedAt     DateTime @updatedAt
  company       Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)
  companyId     Int

  @@index([companyId])
  @@map("hirings")
}

model Company {
  id      Int      @id @default(autoincrement())
  name    String
  email   String   @unique
  budget  Decimal? @db.Decimal(6, 2)
  staff   Int?
  ceo     String?
  hirings Hiring[]
  user    User?

  @@map("companies")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  company       Company?  @relation(fields: [companyId], references: [id], onDelete: Cascade)
  companyId     Int?      @unique
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum Mode {
  OFFICE
  REMOTE
  FLEXIBLE
}
